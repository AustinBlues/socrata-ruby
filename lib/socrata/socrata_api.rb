# Copyright (c) 2010 Socrata.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

module Socrata
  class SocrataAPI
    include HTTParty
  
    default_options[:headers] = {'Content-type' => 'application/json'}
    format :json
  
    attr_reader :error
    attr_reader :config
    
    def initialize(params = {})
      mode = params[:mode] || 'production'
      @config = params[:config] || YAML.load_file(File.dirname(__FILE__) + '/config.yml')[mode]
      
      @logger = params[:logger] || Logger.new(STDOUT)
    
      self.class.basic_auth(@config['credentials']['user'], 
        @config['credentials']['password']) unless @config['credentials'].nil?
      self.class.base_uri @config['server']['host'] unless @config['server'].nil?
      self.class.headers 'X-Socrata-Host' => @config['server']['socrata_host'] unless @config['server']['socrata_host'].nil?
    end
  
    # Process an array of batch requests, generated by get_add_row_request
    def batch_request()
      @response = self.class.post("/batches", :body => {:requests => @batch_requests}.to_json)
    end
  
    # Reads @response and checks for error code
    def check_error()
      if !@response.nil? && @response['error']
        @logger.error("Code: #{@response['code']}, Message: #{@response['message']}")
      else
        @response
      end
    end
  end 
end